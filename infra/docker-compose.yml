version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: tgpt5
      POSTGRES_USER: tgpt5
      POSTGRES_PASSWORD: tgpt5
    ports:
      - "5433:5432"         # локально слушаем 5433
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio:latest   # фикс: валидный тег
    restart: unless-stopped
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    ports:
      - "9000:9000"     # S3 API
      - "9001:9001"     # MinIO Console
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  minio-init:
    image: minio/mc:latest              # фикс: валидный тег
    restart: "no"
    depends_on:
      minio:
        condition: service_healthy      # ждать готовности MinIO
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    command: >
      sh -c '
        set -e;
        echo "Waiting for MinIO to be ready...";
        /usr/bin/mc alias set local http://minio:9000 "$$MINIO_ROOT_USER" "$$MINIO_ROOT_PASSWORD";
        echo "Creating bucket bots (idempotent)...";
        /usr/bin/mc mb -p local/bots || true;
        echo "Configuring anonymous download (optional)...";
        /usr/bin/mc anonymous set download local/bots || true
      '

  gateway:
    image: node:20
    working_dir: /app/services/gateway
    command: sh -c "npm ci && npm run dev"
    volumes:
      - ../:/app
    environment:
      - GPT5_API_KEY=${GPT5_API_KEY}
      - GPT5_MODEL=${GPT5_MODEL}
      - GPT5_BASE_URL=${GPT5_BASE_URL}
      - GPT5_MAX_BOT_KB=${GPT5_MAX_BOT_KB}
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DB=tgpt5
      - PG_USER=tgpt5
      - PG_PASSWORD=tgpt5
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio12345
      - S3_BUCKET=bots
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  pgdata:
  redisdata:
  minio-data:
  minio-config:
